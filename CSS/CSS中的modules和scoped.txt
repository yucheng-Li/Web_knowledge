	CSS有一个特点，它是全局的。这样的特性导致的结果是你在不同的地方定义了相同的CSS命名，
	那么它们的样式会相互覆盖，最终导致的style的错乱，从而影响整个网页的布局。
	
	在Vue中我们通过Scoped与Module来解决这种样式覆盖
	但它们的原理都是在样式的头部添加前缀（哈希码）来区分
	
	相对于scoped的方式，module的方式能够一眼知道该元素时属于哪个文件组件中。在大型项目中能够帮助我们迅速定位到要查找的组件。
	
	除了上述的快速定位，由于module会将所有的style都归入$style中，
	所以我们可以很灵活的将任意的父组件样式传递到任意深层的子组件中。
	例如，将父组件中的title-wrap通过props传递到子组件中

	scoped与module都非常简单、易用，那么又该如何选择呢？
	通过上面的使用对比，发现scoped不需要额外的知识，只要在style中定义scoped属性即可，
	使用非常简便。但它的局限性是适用于中小项目中。因为scoped作用的style对于我们来说不直观，
	对于快速查找定位，module更加合适，同时module对于style向下传递的控制权也非常灵活；额外的还有变量导出等便捷功能。
	所以如果你是小项目中且低成本的使用，scoped更加适合；而对大项目module更加合适，
	虽然有一点学习成本，但对于用更好的控制权、可观性与定位速度来说也就不值一提。


	
	
	
var myObject = (function () {
  var ame = 'sven'; // 私有变量
  return { //公有变量
    abc:'sasa',
    getName:function () {
      return ame;
    }
  }
})()

像这样典型的立即执行函数，实践上是模仿JS中所没有的块作用域，在JS中只有函数作用域，因此常常会导致函数内定义的变量污染全局的问题
而ES6之前我们的解决办法是用立即执行的函数表达式(IIFE)，也就是上述的那种用return划分出了私有变量和公有变量，私有变量只有在块中能访问到
或者通过公有变量调用来延续出去。
而这个设计明显是个漏洞，ES6 就通过let、const 来修复的这个问题，在ES6中， 我们可以使用更简单的大花括号{ }，然后使用 const 或者 let 代替 var 来达到同样的效果
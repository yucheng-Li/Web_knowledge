[非构造函数的继承]https://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html
[js深拷贝与浅拷贝方法]https://segmentfault.com/a/1190000016440069

[看懂这篇文章就可以了] https://juejin.im/post/6844903647856295949

一、深拷贝和浅拷贝的区别
浅拷贝（shallow copy）：只复制指向某个对象的指针，而不复制对象本身，新旧对象共享一块内存；   
深拷贝（deep copy）：复制并创建一个一摸一样的对象，不共享内存，修改新对象，旧对象保持不变。

浅拷贝：
var arr = [1, 2, 3, '4'];

var arr2 = arr;
arr2[1] = "test"; 
console.log(arr); // [1, "test", 3, "4"]
console.log(arr2); // [1, "test", 3, "4"]

arr[0]="fisrt"
console.log(arr); // ["fisrt", "test", 3, "4"]
console.log(arr2); // ["fisrt", "test", 3, "4"]


深拷贝

数组：slice() \ concat() \ ES6扩展运算符 [...arr1] = [arr]

对象：创建一个新的空对象利用for in 迭代旧的 \ JSON.parse(JSON.stringty())




















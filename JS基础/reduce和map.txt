	reduce 和 map 的区别
	
	先说map 的格式，map接收一个参数为函数，对调用者数组的每一项执行这个函数并且将其结果返回一个新的数组
	function pow(x) {
		return x * x;
	}
	var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
	var results = arr.map(pow); // [1, 4, 9, 16, 25, 36, 49, 64, 81]
	
	相比map 而言 reduce 也是接收一个函数为参数，同样是对调用者数组的每一项执行这个函数并且将其结果返回最终结果
	注意的是reduce接收的是两个参数 x, y ， x是数组中当前项值，y 是下一项的值，每次执行后会将执行结果作为x 进入下一次计算
	知道迭代到最后计算出总值
	var arr = [1, 3, 5, 7, 9];
	arr.reduce(function (x, y) {
		return x * 10 + y;
	}); // 13579
	
	
	~手撕 map 函数~
	实际就是做个for 循环然后对执行到的每一个项作为参数执行传入map 的函数
		Array.prototype._map = function (fn) {
		let arr = [];
		let me = this;
		for(let i = 0; i < me.length; i++) {
			arr.push(fn(me[i]))
		}
		return arr;
	}
	
	~手撕 reduce函数~
	Array.prototype._reduce = function (fn) {
    let arr = 0;
    let me = this;
    for(let i = 0; i+1 < me.length; i++) {
        arr += fn(me[i], me[i+1])
        i++
    }
    return arr;
}
		
	
	
	
	
	
	
	
	
	
		
	